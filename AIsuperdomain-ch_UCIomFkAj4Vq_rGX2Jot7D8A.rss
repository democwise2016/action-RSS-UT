<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:googleplay="http://www.google.com/schemas/play-podcasts/1.0" xmlns:media="http://www.rssboard.org/media-rss" version="2.0">
  <channel>
    <title><![CDATA[AI超元域[YT+]]]></title>
    <link>http://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A</link>
    <image>
      <url>https://yt3.googleusercontent.com/6AyGuZqZQctDdjIWe9VYpaCVAD84ADoSpCcuUmaw2ANCPJu88x1A5svwfZpW5Hvhapl5N1nuqQ=s900-b50-c-k-c0x008A95A5-no-rj</url>
      <title>AI超元域[YT+]</title>
      <link>http://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A</link>
    </image>
    <language>en-us</language>
    <atom:link href="https://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A" rel="self" type="application/rss+xml"/>
    <copyright><![CDATA[AI超元域[YT+]]]></copyright>
    <itunes:author><![CDATA[AI超元域[YT+]]]></itunes:author>
    <itunes:summary>
      <![CDATA[
      <a href="https://www.youtube.com/channel/UCIomFkAj4Vq_rGX2Jot7D8A" target="_blank">https://www.youtube.com/channel/UCIomFkAj4Vq_rGX2Jot7D8A</a><br />
<br />
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A" target="_blank">https://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A</a>
      ]]>
    </itunes:summary>
    <description>
      <![CDATA[
      <a href="https://www.youtube.com/channel/UCIomFkAj4Vq_rGX2Jot7D8A" target="_blank">https://www.youtube.com/channel/UCIomFkAj4Vq_rGX2Jot7D8A</a><br />
<br />
<a href="https://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A" target="_blank">https://www.youtube.com/feeds/videos.xml?channel_id=UCIomFkAj4Vq_rGX2Jot7D8A</a>
      ]]>
    </description>
    <itunes:owner>
      <itunes:name><![CDATA[AI超元域[YT+]]]></itunes:name>
    </itunes:owner>
    <itunes:image href="https://yt3.googleusercontent.com/6AyGuZqZQctDdjIWe9VYpaCVAD84ADoSpCcuUmaw2ANCPJu88x1A5svwfZpW5Hvhapl5N1nuqQ=s900-b50-c-k-c0x008A95A5-no-rj"/>
<item>
      <title><![CDATA[颠覆传统AI智能体！AutoGen革命性创新GraphFlow技术！让AI团队自动协作！5分钟实现实现智能体工作流自动化！AutoGen GraphFlow保姆级实战教程！支持Qwen3与ollama]]></title>
      <link>https://www.youtube.com/watch?v=q_IdxUGZsow</link>
      <itunes:title><![CDATA[颠覆传统AI智能体！AutoGen革命性创新GraphFlow技术！让AI团队自动协作！5分钟实现实现智能体工作流自动化！AutoGen GraphFlow保姆级实战教程！支持Qwen3与ollama]]></itunes:title>
      <itunes:author><![CDATA[AI超元域]]></itunes:author>
      <itunes:summary>
        <![CDATA[https://www.youtube.com/watch?v=q_IdxUGZsow
🚀🚀🚀视频简介：
✅【重磅教程】AutoGen开源框架新增GraphFlow技术，轻松构建多智能体系统，掌握AI未来发展方向，深度解析AutoGen的革命性GraphFlow功能，从顺序执行到并行工作流，打造超强多智能体应用
🚀 本视频详细演示了开源AI框架AutoGen新增的革命性GraphFlow技术！GraphFlow是一个基于图的执行框架，能让开发者通过有向图精准控制agent之间的交互方式，支持顺序执行、并行执行、条件执行和循环执行等复杂工作流模式。
🔍 视频通过三个实用案例展示GraphFlow的强大功能：
1️⃣ 顺序执行工作流：构建一个三阶段翻译系统，由翻译agent、校对agent和格式化agent按顺序协作，展示了如何在PyCharm中配置环境并调用不同模型（GPT-4.1、Gemini 2.0 Flash和Qwen3-14B）。
2️⃣ 并行执行工作流：创建一个文章创作系统，多个agent并行处理不同任务（语法检查、风格编辑），最后由终审编辑agent整合输出。
3️⃣ 旅行规划系统：构建更复杂的多agent系统，包括旅行规划师、当地专家和语言专家，通过MessageFilterAgent控制信息流，完成旅行规划任务。

👉👉👉笔记：https://www.aivi.fyi/aiagents/introduce-AutoGen-GraphFlow
👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain
👉👉👉请我喝咖啡：https://ko-fi.com/aila

🔥🔥🔥YouTube时间戳：
00:00:00 - AutoGen GraphFlow 简介
00:00:12 - GraphFlow 基于图的执行框架介绍
00:00:34 - 开发环境准备
00:01:04 - 顺序执行工作流案例讲解
00:03:13 - 三个翻译相关Agent的定义与配置
00:04:08 - 构建顺序执行图与执行流程
00:05:21 - 执行翻译工作流并观察结果
00:06:08 - 并行执行工作流案例讲解
00:07:14 - 文章创作并行工作流的设计方式
00:09:10 - 执行并行文章创作工作流
00:10:07 - 旅行规划多Agent系统演示
00:11:51 - 三天尼泊尔旅程规划案例展示
00:12:24 - 视频总结与资源获取方式

#autogen #aiagents #aiagent #ollama #qwen3 #gemini #gpt41 #agents #llm #ai #workflow #agi]]>
      </itunes:summary>
      <description>
        <![CDATA[https://www.youtube.com/watch?v=q_IdxUGZsow
🚀🚀🚀视频简介：
✅【重磅教程】AutoGen开源框架新增GraphFlow技术，轻松构建多智能体系统，掌握AI未来发展方向，深度解析AutoGen的革命性GraphFlow功能，从顺序执行到并行工作流，打造超强多智能体应用
🚀 本视频详细演示了开源AI框架AutoGen新增的革命性GraphFlow技术！GraphFlow是一个基于图的执行框架，能让开发者通过有向图精准控制agent之间的交互方式，支持顺序执行、并行执行、条件执行和循环执行等复杂工作流模式。
🔍 视频通过三个实用案例展示GraphFlow的强大功能：
1️⃣ 顺序执行工作流：构建一个三阶段翻译系统，由翻译agent、校对agent和格式化agent按顺序协作，展示了如何在PyCharm中配置环境并调用不同模型（GPT-4.1、Gemini 2.0 Flash和Qwen3-14B）。
2️⃣ 并行执行工作流：创建一个文章创作系统，多个agent并行处理不同任务（语法检查、风格编辑），最后由终审编辑agent整合输出。
3️⃣ 旅行规划系统：构建更复杂的多agent系统，包括旅行规划师、当地专家和语言专家，通过MessageFilterAgent控制信息流，完成旅行规划任务。

👉👉👉笔记：https://www.aivi.fyi/aiagents/introduce-AutoGen-GraphFlow
👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain
👉👉👉请我喝咖啡：https://ko-fi.com/aila

🔥🔥🔥YouTube时间戳：
00:00:00 - AutoGen GraphFlow 简介
00:00:12 - GraphFlow 基于图的执行框架介绍
00:00:34 - 开发环境准备
00:01:04 - 顺序执行工作流案例讲解
00:03:13 - 三个翻译相关Agent的定义与配置
00:04:08 - 构建顺序执行图与执行流程
00:05:21 - 执行翻译工作流并观察结果
00:06:08 - 并行执行工作流案例讲解
00:07:14 - 文章创作并行工作流的设计方式
00:09:10 - 执行并行文章创作工作流
00:10:07 - 旅行规划多Agent系统演示
00:11:51 - 三天尼泊尔旅程规划案例展示
00:12:24 - 视频总结与资源获取方式

#autogen #aiagents #aiagent #ollama #qwen3 #gemini #gpt41 #agents #llm #ai #workflow #agi]]>
      </description>
      <content:encoded><![CDATA[https://www.youtube.com/watch?v=q_IdxUGZsow
🚀🚀🚀视频简介：
✅【重磅教程】AutoGen开源框架新增GraphFlow技术，轻松构建多智能体系统，掌握AI未来发展方向，深度解析AutoGen的革命性GraphFlow功能，从顺序执行到并行工作流，打造超强多智能体应用
🚀 本视频详细演示了开源AI框架AutoGen新增的革命性GraphFlow技术！GraphFlow是一个基于图的执行框架，能让开发者通过有向图精准控制agent之间的交互方式，支持顺序执行、并行执行、条件执行和循环执行等复杂工作流模式。
🔍 视频通过三个实用案例展示GraphFlow的强大功能：
1️⃣ 顺序执行工作流：构建一个三阶段翻译系统，由翻译agent、校对agent和格式化agent按顺序协作，展示了如何在PyCharm中配置环境并调用不同模型（GPT-4.1、Gemini 2.0 Flash和Qwen3-14B）。
2️⃣ 并行执行工作流：创建一个文章创作系统，多个agent并行处理不同任务（语法检查、风格编辑），最后由终审编辑agent整合输出。
3️⃣ 旅行规划系统：构建更复杂的多agent系统，包括旅行规划师、当地专家和语言专家，通过MessageFilterAgent控制信息流，完成旅行规划任务。

👉👉👉笔记：https://www.aivi.fyi/aiagents/introduce-AutoGen-GraphFlow
👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain
👉👉👉请我喝咖啡：https://ko-fi.com/aila

🔥🔥🔥YouTube时间戳：
00:00:00 - AutoGen GraphFlow 简介
00:00:12 - GraphFlow 基于图的执行框架介绍
00:00:34 - 开发环境准备
00:01:04 - 顺序执行工作流案例讲解
00:03:13 - 三个翻译相关Agent的定义与配置
00:04:08 - 构建顺序执行图与执行流程
00:05:21 - 执行翻译工作流并观察结果
00:06:08 - 并行执行工作流案例讲解
00:07:14 - 文章创作并行工作流的设计方式
00:09:10 - 执行并行文章创作工作流
00:10:07 - 旅行规划多Agent系统演示
00:11:51 - 三天尼泊尔旅程规划案例展示
00:12:24 - 视频总结与资源获取方式

#autogen #aiagents #aiagent #ollama #qwen3 #gemini #gpt41 #agents #llm #ai #workflow #agi]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/q_IdxUGZsow/hqdefault.jpg"/>
      <pubDate>2025-05-09T12:32:13.000Z</pubDate>
    </item><item>
      <title><![CDATA[OCR能力倍增！n8n+Gemini 2.5 pro 0506三分钟打造全自动OCR工作流！保姆级教程搭建企业级OCR识别工作流！高难度扫描件实测Gemini2.5！不懂编程也能搭建自己的自动化工作流]]></title>
      <link>https://www.youtube.com/watch?v=nb87POhO6aA</link>
      <itunes:title><![CDATA[OCR能力倍增！n8n+Gemini 2.5 pro 0506三分钟打造全自动OCR工作流！保姆级教程搭建企业级OCR识别工作流！高难度扫描件实测Gemini2.5！不懂编程也能搭建自己的自动化工作流]]></itunes:title>
      <itunes:author><![CDATA[AI超元域]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=40" target="_blank"><strong># - 使用难度较高的扫描图像测试OCR能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_40.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=68" target="_blank"><strong># - 测试扭曲字体的包装图像</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_68.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=99" target="_blank"><strong># - 使用AI Studio进行第一次测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_99.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=137" target="_blank"><strong># - 金属雕刻效果图像测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_137.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=174" target="_blank"><strong># - 旧报纸扫描件测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_174.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=237" target="_blank"><strong># - 模糊图像识别测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_237.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=298" target="_blank"><strong># - n8n自动化工作流搭建准备</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_298.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=336" target="_blank"><strong># - 创建批量OCR工作流</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_336.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=380" target="_blank"><strong># - 读取文件节点设置</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_380.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=424" target="_blank"><strong># - 循环处理图像</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_424.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=458" target="_blank"><strong># - 将图像转为base64编码</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_458.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=487" target="_blank"><strong># - 配置Gemini API接口</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_487.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=574" target="_blank"><strong># - 转换OCR结果为纯文本</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_574.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=629" target="_blank"><strong># - 保存结果到本地文件</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_629.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=754" target="_blank"><strong># - 查看OCR识别结果与验证</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_754.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=792" target="_blank"><strong># - 总结与代码资源获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_792.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=nb87POhO6aA</p><p>🚀🚀🚀视频简介：</p><p>✅【震撼OCR技术】Gemini 2.5 Pro挑战极限！扭曲字体、模糊扫描件准确识别，连遮挡文字都能推理还原！5分钟搭建n8n自动化工作流批量处理让企业文档识别效率提升300%，解决企业文档识别痛点的终极方案</p><p>📱 本视频深入测试了谷歌最新发布的Gemini 2.5 Pro模型在OCR文字识别方面的惊人能力！我们使用了多种极具挑战性的图像进行测试：PS扭曲字体的产品包装📦、金属雕刻效果文字✨、模糊旧报纸📰，甚至是有遮挡的复杂扫描件📄。</p><p>🧪 测试结果令人震惊！Gemini 2.5 Pro不仅能完美识别各种扭曲变形的字体，还能通过上下文推理还原被遮挡的文字内容，OCR能力远超前代模型！🚀</p><p>⚙️ 视频第二部分，我们手把手教你如何使用n8n无代码平台搭建自动化OCR工作流，即使不懂编程也能在几分钟内完成！而且还详细讲解了从安装nodejs、搭建n8n环境、配置Gemini API，到实现批量文档自动OCR识别的全过程。✅</p><p>🏆 通过简单几步配置，就能实现批量自动化OCR识别，将结果保存为标准TXT文本，大幅提升工作效率！💯</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/deploy-n8n+Gemini-2.5-pro-0506-for-OCR</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00 - Gemini 2.5 Pro介绍与OCR能力概述</p><p>00:40 - 使用难度较高的扫描图像测试OCR能力</p><p>01:08 - 测试扭曲字体的包装图像</p><p>01:39 - 使用AI Studio进行第一次测试</p><p>02:17 - 金属雕刻效果图像测试</p><p>02:54 - 旧报纸扫描件测试</p><p>03:57 - 模糊图像识别测试</p><p>04:58 - n8n自动化工作流搭建准备</p><p>05:36 - 创建批量OCR工作流</p><p>06:20 - 读取文件节点设置</p><p>07:04 - 循环处理图像</p><p>07:38 - 将图像转为base64编码</p><p>08:07 - 配置Gemini API接口</p><p>09:34 - 转换OCR结果为纯文本</p><p>10:29 - 保存结果到本地文件</p><p>12:34 - 查看OCR识别结果与验证</p><p>13:12 - 总结与代码资源获取方式</p><p></p><p>#ocr #gemini ni #n8n #n8ntutorial #gemini2025 #gemini25 #aiworkflow #ai #aigc #agi #pdf</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=40" target="_blank"><strong># - 使用难度较高的扫描图像测试OCR能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_40.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=68" target="_blank"><strong># - 测试扭曲字体的包装图像</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_68.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=99" target="_blank"><strong># - 使用AI Studio进行第一次测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_99.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=137" target="_blank"><strong># - 金属雕刻效果图像测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_137.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=174" target="_blank"><strong># - 旧报纸扫描件测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_174.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=237" target="_blank"><strong># - 模糊图像识别测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_237.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=298" target="_blank"><strong># - n8n自动化工作流搭建准备</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_298.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=336" target="_blank"><strong># - 创建批量OCR工作流</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_336.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=380" target="_blank"><strong># - 读取文件节点设置</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_380.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=424" target="_blank"><strong># - 循环处理图像</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_424.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=458" target="_blank"><strong># - 将图像转为base64编码</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_458.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=487" target="_blank"><strong># - 配置Gemini API接口</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_487.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=574" target="_blank"><strong># - 转换OCR结果为纯文本</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_574.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=629" target="_blank"><strong># - 保存结果到本地文件</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_629.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=754" target="_blank"><strong># - 查看OCR识别结果与验证</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_754.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=792" target="_blank"><strong># - 总结与代码资源获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_792.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=nb87POhO6aA</p><p>🚀🚀🚀视频简介：</p><p>✅【震撼OCR技术】Gemini 2.5 Pro挑战极限！扭曲字体、模糊扫描件准确识别，连遮挡文字都能推理还原！5分钟搭建n8n自动化工作流批量处理让企业文档识别效率提升300%，解决企业文档识别痛点的终极方案</p><p>📱 本视频深入测试了谷歌最新发布的Gemini 2.5 Pro模型在OCR文字识别方面的惊人能力！我们使用了多种极具挑战性的图像进行测试：PS扭曲字体的产品包装📦、金属雕刻效果文字✨、模糊旧报纸📰，甚至是有遮挡的复杂扫描件📄。</p><p>🧪 测试结果令人震惊！Gemini 2.5 Pro不仅能完美识别各种扭曲变形的字体，还能通过上下文推理还原被遮挡的文字内容，OCR能力远超前代模型！🚀</p><p>⚙️ 视频第二部分，我们手把手教你如何使用n8n无代码平台搭建自动化OCR工作流，即使不懂编程也能在几分钟内完成！而且还详细讲解了从安装nodejs、搭建n8n环境、配置Gemini API，到实现批量文档自动OCR识别的全过程。✅</p><p>🏆 通过简单几步配置，就能实现批量自动化OCR识别，将结果保存为标准TXT文本，大幅提升工作效率！💯</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/deploy-n8n+Gemini-2.5-pro-0506-for-OCR</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00 - Gemini 2.5 Pro介绍与OCR能力概述</p><p>00:40 - 使用难度较高的扫描图像测试OCR能力</p><p>01:08 - 测试扭曲字体的包装图像</p><p>01:39 - 使用AI Studio进行第一次测试</p><p>02:17 - 金属雕刻效果图像测试</p><p>02:54 - 旧报纸扫描件测试</p><p>03:57 - 模糊图像识别测试</p><p>04:58 - n8n自动化工作流搭建准备</p><p>05:36 - 创建批量OCR工作流</p><p>06:20 - 读取文件节点设置</p><p>07:04 - 循环处理图像</p><p>07:38 - 将图像转为base64编码</p><p>08:07 - 配置Gemini API接口</p><p>09:34 - 转换OCR结果为纯文本</p><p>10:29 - 保存结果到本地文件</p><p>12:34 - 查看OCR识别结果与验证</p><p>13:12 - 总结与代码资源获取方式</p><p></p><p>#ocr #gemini ni #n8n #n8ntutorial #gemini2025 #gemini25 #aiworkflow #ai #aigc #agi #pdf</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=40" target="_blank"><strong># - 使用难度较高的扫描图像测试OCR能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_40.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=68" target="_blank"><strong># - 测试扭曲字体的包装图像</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_68.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=99" target="_blank"><strong># - 使用AI Studio进行第一次测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_99.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=137" target="_blank"><strong># - 金属雕刻效果图像测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_137.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=174" target="_blank"><strong># - 旧报纸扫描件测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_174.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=237" target="_blank"><strong># - 模糊图像识别测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_237.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=298" target="_blank"><strong># - n8n自动化工作流搭建准备</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_298.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=336" target="_blank"><strong># - 创建批量OCR工作流</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_336.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=380" target="_blank"><strong># - 读取文件节点设置</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_380.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=424" target="_blank"><strong># - 循环处理图像</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_424.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=458" target="_blank"><strong># - 将图像转为base64编码</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_458.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=487" target="_blank"><strong># - 配置Gemini API接口</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_487.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=574" target="_blank"><strong># - 转换OCR结果为纯文本</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_574.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=629" target="_blank"><strong># - 保存结果到本地文件</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_629.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=754" target="_blank"><strong># - 查看OCR识别结果与验证</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_754.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/nb87POhO6aA&t=792" target="_blank"><strong># - 总结与代码资源获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/nb87POhO6aA_792.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=nb87POhO6aA</p><p>🚀🚀🚀视频简介：</p><p>✅【震撼OCR技术】Gemini 2.5 Pro挑战极限！扭曲字体、模糊扫描件准确识别，连遮挡文字都能推理还原！5分钟搭建n8n自动化工作流批量处理让企业文档识别效率提升300%，解决企业文档识别痛点的终极方案</p><p>📱 本视频深入测试了谷歌最新发布的Gemini 2.5 Pro模型在OCR文字识别方面的惊人能力！我们使用了多种极具挑战性的图像进行测试：PS扭曲字体的产品包装📦、金属雕刻效果文字✨、模糊旧报纸📰，甚至是有遮挡的复杂扫描件📄。</p><p>🧪 测试结果令人震惊！Gemini 2.5 Pro不仅能完美识别各种扭曲变形的字体，还能通过上下文推理还原被遮挡的文字内容，OCR能力远超前代模型！🚀</p><p>⚙️ 视频第二部分，我们手把手教你如何使用n8n无代码平台搭建自动化OCR工作流，即使不懂编程也能在几分钟内完成！而且还详细讲解了从安装nodejs、搭建n8n环境、配置Gemini API，到实现批量文档自动OCR识别的全过程。✅</p><p>🏆 通过简单几步配置，就能实现批量自动化OCR识别，将结果保存为标准TXT文本，大幅提升工作效率！💯</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/deploy-n8n+Gemini-2.5-pro-0506-for-OCR</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00 - Gemini 2.5 Pro介绍与OCR能力概述</p><p>00:40 - 使用难度较高的扫描图像测试OCR能力</p><p>01:08 - 测试扭曲字体的包装图像</p><p>01:39 - 使用AI Studio进行第一次测试</p><p>02:17 - 金属雕刻效果图像测试</p><p>02:54 - 旧报纸扫描件测试</p><p>03:57 - 模糊图像识别测试</p><p>04:58 - n8n自动化工作流搭建准备</p><p>05:36 - 创建批量OCR工作流</p><p>06:20 - 读取文件节点设置</p><p>07:04 - 循环处理图像</p><p>07:38 - 将图像转为base64编码</p><p>08:07 - 配置Gemini API接口</p><p>09:34 - 转换OCR结果为纯文本</p><p>10:29 - 保存结果到本地文件</p><p>12:34 - 查看OCR识别结果与验证</p><p>13:12 - 总结与代码资源获取方式</p><p></p><p>#ocr #gemini ni #n8n #n8ntutorial #gemini2025 #gemini25 #aiworkflow #ai #aigc #agi #pdf</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/nb87POhO6aA/hqdefault.jpg"/>
      <pubDate>2025-05-07T08:51:13.000Z</pubDate>
    </item><item>
      <title><![CDATA[🚀unsloth微调Qwen3大模型保姆级视频教程！从数据处理到LoRA微调Qwen3-14B到4比特量化并且用LM Studio运行！零代码基础也能完成的LoRA高效微调全过程详解！小白也能轻松入门]]></title>
      <link>https://www.youtube.com/watch?v=opk1f-XtIsw</link>
      <itunes:title><![CDATA[🚀unsloth微调Qwen3大模型保姆级视频教程！从数据处理到LoRA微调Qwen3-14B到4比特量化并且用LM Studio运行！零代码基础也能完成的LoRA高效微调全过程详解！小白也能轻松入门]]></itunes:title>
      <itunes:author><![CDATA[AI超元域]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :14 - 如何使用unsloth框架微调Qwen3模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :39 - 什么情况下需要微调大模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :44 - LoRA微调的优势与应用场景</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :24 - 双模式能力微调案例介绍</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :03 - 准备谷歌Colab环境与设置</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :02 - 加载和处理数据集</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :01 - 开始执行模型微调过程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :26 - 测试普通对话与思考模式效果</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :01 - 保存微调后模型到Hugging Face</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :19 - 量化模型并保存到Google Drive</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :04 - 在LM Studio中加载微调后的模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :59 - 测试微调后模型的数学解题能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :42 - 视频总结与资源获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=opk1f-XtIsw</p><p>🚀🚀🚀视频简介：</p><p>✅【保姆级教程】如何利用Unsloth框架让你的Qwen3大模型变身数学解题专家——详细微调步骤与实操演示从配置到测试全流程。让阿里巴巴的Qwen3大模型为你所用：从环境配置到数据处理，零代码基础也能完成的LoRA高效微调全过程详解。</p><p>✅本视频详细演示了如何使用Unsloth框架对阿里巴巴的Qwen3系列开源大模型进行LoRA微调 🧠，让模型具备普通对话和深度思考的双模式能力！</p><p>从微调原理讲起 📚，讲解何时需要微调大模型及LoRA技术的优势。</p><p>通过Colab平台 💻，完整展示环境配置、数据处理、参数设置和微调全过程。</p><p>微调后的模型不仅保留自然对话能力 💬，还能解决复杂数学问题 🔢！</p><p>最后，将微调后的模型以4比特量化为GGUF格式 📊，部署到LM Studio进行本地测试。</p><p>无需高端设备 ✨，普通电脑也能轻松运行这个强大的AI助手！🌟</p><p></p><p>👉👉👉colab笔记：https://colab.research.google.com/drive/1pfv8UvNyLhB0ZKbhl7jbCeHcHBUN12Ai?usp=sharing</p><p>👉👉👉博客笔记：https://www.aivi.fyi/llms/Fine-Tuning-Qwen3-14B</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - 阿里巴巴发布的Qwen3系列开源大模型简介</p><p>00:00:14 - 如何使用unsloth框架微调Qwen3模型</p><p>00:00:39 - 什么情况下需要微调大模型</p><p>00:01:44 - LoRA微调的优势与应用场景</p><p>00:02:24 - 双模式能力微调案例介绍</p><p>00:03:03 - 准备谷歌Colab环境与设置</p><p>00:04:02 - 加载和处理数据集</p><p>00:07:01 - 开始执行模型微调过程</p><p>00:07:26 - 测试普通对话与思考模式效果</p><p>00:08:01 - 保存微调后模型到Hugging Face</p><p>00:09:19 - 量化模型并保存到Google Drive</p><p>00:11:04 - 在LM Studio中加载微调后的模型</p><p>00:11:59 - 测试微调后模型的数学解题能力</p><p>00:12:42 - 视频总结与资源获取方式</p><p></p><p>#qwen3 #qwen #finetuning #finetune #llm #ai #aigc #agi #unsloth #lora</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :14 - 如何使用unsloth框架微调Qwen3模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :39 - 什么情况下需要微调大模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :44 - LoRA微调的优势与应用场景</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :24 - 双模式能力微调案例介绍</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :03 - 准备谷歌Colab环境与设置</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :02 - 加载和处理数据集</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :01 - 开始执行模型微调过程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :26 - 测试普通对话与思考模式效果</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :01 - 保存微调后模型到Hugging Face</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :19 - 量化模型并保存到Google Drive</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :04 - 在LM Studio中加载微调后的模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :59 - 测试微调后模型的数学解题能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :42 - 视频总结与资源获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=opk1f-XtIsw</p><p>🚀🚀🚀视频简介：</p><p>✅【保姆级教程】如何利用Unsloth框架让你的Qwen3大模型变身数学解题专家——详细微调步骤与实操演示从配置到测试全流程。让阿里巴巴的Qwen3大模型为你所用：从环境配置到数据处理，零代码基础也能完成的LoRA高效微调全过程详解。</p><p>✅本视频详细演示了如何使用Unsloth框架对阿里巴巴的Qwen3系列开源大模型进行LoRA微调 🧠，让模型具备普通对话和深度思考的双模式能力！</p><p>从微调原理讲起 📚，讲解何时需要微调大模型及LoRA技术的优势。</p><p>通过Colab平台 💻，完整展示环境配置、数据处理、参数设置和微调全过程。</p><p>微调后的模型不仅保留自然对话能力 💬，还能解决复杂数学问题 🔢！</p><p>最后，将微调后的模型以4比特量化为GGUF格式 📊，部署到LM Studio进行本地测试。</p><p>无需高端设备 ✨，普通电脑也能轻松运行这个强大的AI助手！🌟</p><p></p><p>👉👉👉colab笔记：https://colab.research.google.com/drive/1pfv8UvNyLhB0ZKbhl7jbCeHcHBUN12Ai?usp=sharing</p><p>👉👉👉博客笔记：https://www.aivi.fyi/llms/Fine-Tuning-Qwen3-14B</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - 阿里巴巴发布的Qwen3系列开源大模型简介</p><p>00:00:14 - 如何使用unsloth框架微调Qwen3模型</p><p>00:00:39 - 什么情况下需要微调大模型</p><p>00:01:44 - LoRA微调的优势与应用场景</p><p>00:02:24 - 双模式能力微调案例介绍</p><p>00:03:03 - 准备谷歌Colab环境与设置</p><p>00:04:02 - 加载和处理数据集</p><p>00:07:01 - 开始执行模型微调过程</p><p>00:07:26 - 测试普通对话与思考模式效果</p><p>00:08:01 - 保存微调后模型到Hugging Face</p><p>00:09:19 - 量化模型并保存到Google Drive</p><p>00:11:04 - 在LM Studio中加载微调后的模型</p><p>00:11:59 - 测试微调后模型的数学解题能力</p><p>00:12:42 - 视频总结与资源获取方式</p><p></p><p>#qwen3 #qwen #finetuning #finetune #llm #ai #aigc #agi #unsloth #lora</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :14 - 如何使用unsloth框架微调Qwen3模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :39 - 什么情况下需要微调大模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :44 - LoRA微调的优势与应用场景</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :24 - 双模式能力微调案例介绍</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :03 - 准备谷歌Colab环境与设置</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :02 - 加载和处理数据集</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :01 - 开始执行模型微调过程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :26 - 测试普通对话与思考模式效果</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :01 - 保存微调后模型到Hugging Face</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :19 - 量化模型并保存到Google Drive</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :04 - 在LM Studio中加载微调后的模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :59 - 测试微调后模型的数学解题能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/opk1f-XtIsw&t=0" target="_blank"><strong># :42 - 视频总结与资源获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/opk1f-XtIsw_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=opk1f-XtIsw</p><p>🚀🚀🚀视频简介：</p><p>✅【保姆级教程】如何利用Unsloth框架让你的Qwen3大模型变身数学解题专家——详细微调步骤与实操演示从配置到测试全流程。让阿里巴巴的Qwen3大模型为你所用：从环境配置到数据处理，零代码基础也能完成的LoRA高效微调全过程详解。</p><p>✅本视频详细演示了如何使用Unsloth框架对阿里巴巴的Qwen3系列开源大模型进行LoRA微调 🧠，让模型具备普通对话和深度思考的双模式能力！</p><p>从微调原理讲起 📚，讲解何时需要微调大模型及LoRA技术的优势。</p><p>通过Colab平台 💻，完整展示环境配置、数据处理、参数设置和微调全过程。</p><p>微调后的模型不仅保留自然对话能力 💬，还能解决复杂数学问题 🔢！</p><p>最后，将微调后的模型以4比特量化为GGUF格式 📊，部署到LM Studio进行本地测试。</p><p>无需高端设备 ✨，普通电脑也能轻松运行这个强大的AI助手！🌟</p><p></p><p>👉👉👉colab笔记：https://colab.research.google.com/drive/1pfv8UvNyLhB0ZKbhl7jbCeHcHBUN12Ai?usp=sharing</p><p>👉👉👉博客笔记：https://www.aivi.fyi/llms/Fine-Tuning-Qwen3-14B</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - 阿里巴巴发布的Qwen3系列开源大模型简介</p><p>00:00:14 - 如何使用unsloth框架微调Qwen3模型</p><p>00:00:39 - 什么情况下需要微调大模型</p><p>00:01:44 - LoRA微调的优势与应用场景</p><p>00:02:24 - 双模式能力微调案例介绍</p><p>00:03:03 - 准备谷歌Colab环境与设置</p><p>00:04:02 - 加载和处理数据集</p><p>00:07:01 - 开始执行模型微调过程</p><p>00:07:26 - 测试普通对话与思考模式效果</p><p>00:08:01 - 保存微调后模型到Hugging Face</p><p>00:09:19 - 量化模型并保存到Google Drive</p><p>00:11:04 - 在LM Studio中加载微调后的模型</p><p>00:11:59 - 测试微调后模型的数学解题能力</p><p>00:12:42 - 视频总结与资源获取方式</p><p></p><p>#qwen3 #qwen #finetuning #finetune #llm #ai #aigc #agi #unsloth #lora</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/opk1f-XtIsw/hqdefault.jpg"/>
      <pubDate>2025-05-03T14:08:27.000Z</pubDate>
    </item><item>
      <title><![CDATA[🚀AI颠覆数学领域！客观测评6710亿参数开源大模型DeepSeek-Prover-V2-671B！专攻形式化定理证明，彻底改变研究者探索数学真理的方式！代数、几何、微积分样样精通！AI取代数学家教！]]></title>
      <link>https://www.youtube.com/watch?v=wRYo-Ua4Zbc</link>
      <itunes:title><![CDATA[🚀AI颠覆数学领域！客观测评6710亿参数开源大模型DeepSeek-Prover-V2-671B！专攻形式化定理证明，彻底改变研究者探索数学真理的方式！代数、几何、微积分样样精通！AI取代数学家教！]]></itunes:title>
      <itunes:author><![CDATA[AI超元域]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :20 - 模型特点与适用领域</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :35 - 开始测试模型数学能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :08 - 第一题：青蛙爬井问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :45 - 第二题：弹珠颜色比例计算</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :26 - 第三题：2*3网格染色方法数量</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :01 - 第四题：整数乘积与差值问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :32 - 第五题：阶乘与2024的关系</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :59 - 第六题：巧克力工厂打包时间</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :44 - 第七题：画框面积比例</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :11 - 第八题：代币博弈问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :59 - 之后的题目：高级数论与代数题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :23 - 总结：模型在15道测试题中答对12题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :55 - 视频结束</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=wRYo-Ua4Zbc</p><p>🚀🚀🚀视频简介：</p><p>✅【真实客观测评】当AI遇上数学：深度解析DeepSeek-Prover-V2如何运用形式化推理解决阶乘、线性代数、积分等多领域数学难题的惊艳表现</p><p>📊 本期视频详细测评了DeepSeek最新发布的数学定理证明大模型！</p><p>🔍 通过15道不同难度和领域的数学题全面测试模型性能，涵盖代数、几何、数论、积分等领域。</p><p>👨‍🏫 从简单的青蛙爬井问题到复杂的LaTeX格式高等数学，模型仅错3题，展现出令人惊叹的推理能力和详细解题步骤！</p><p>🚀 见证AI如何解决代币博弈、巧克力工厂时间计算等复杂问题，为数学学习和研究带来革命性辅助工具。</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/introduce-DeepSeek-Prover-V2-671B</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - DeepSeek发布数学证明大模型DeepSeek-Prover-V2-671B</p><p>00:00:20 - 模型特点与适用领域</p><p>00:00:35 - 开始测试模型数学能力</p><p>00:01:08 - 第一题：青蛙爬井问题</p><p>00:01:45 - 第二题：弹珠颜色比例计算</p><p>00:02:26 - 第三题：2*3网格染色方法数量</p><p>00:03:01 - 第四题：整数乘积与差值问题</p><p>00:03:32 - 第五题：阶乘与2024的关系</p><p>00:03:59 - 第六题：巧克力工厂打包时间</p><p>00:04:44 - 第七题：画框面积比例</p><p>00:05:11 - 第八题：代币博弈问题</p><p>00:05:59 - 之后的题目：高级数论与代数题</p><p>00:09:23 - 总结：模型在15道测试题中答对12题</p><p>00:09:55 - 视频结束</p><p></p><p>#deepseek #deepseekai #deepseekv2 #ai #aigc #aimathsteacher #aicoding #llm #aiagents</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :20 - 模型特点与适用领域</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :35 - 开始测试模型数学能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :08 - 第一题：青蛙爬井问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :45 - 第二题：弹珠颜色比例计算</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :26 - 第三题：2*3网格染色方法数量</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :01 - 第四题：整数乘积与差值问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :32 - 第五题：阶乘与2024的关系</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :59 - 第六题：巧克力工厂打包时间</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :44 - 第七题：画框面积比例</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :11 - 第八题：代币博弈问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :59 - 之后的题目：高级数论与代数题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :23 - 总结：模型在15道测试题中答对12题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :55 - 视频结束</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=wRYo-Ua4Zbc</p><p>🚀🚀🚀视频简介：</p><p>✅【真实客观测评】当AI遇上数学：深度解析DeepSeek-Prover-V2如何运用形式化推理解决阶乘、线性代数、积分等多领域数学难题的惊艳表现</p><p>📊 本期视频详细测评了DeepSeek最新发布的数学定理证明大模型！</p><p>🔍 通过15道不同难度和领域的数学题全面测试模型性能，涵盖代数、几何、数论、积分等领域。</p><p>👨‍🏫 从简单的青蛙爬井问题到复杂的LaTeX格式高等数学，模型仅错3题，展现出令人惊叹的推理能力和详细解题步骤！</p><p>🚀 见证AI如何解决代币博弈、巧克力工厂时间计算等复杂问题，为数学学习和研究带来革命性辅助工具。</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/introduce-DeepSeek-Prover-V2-671B</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - DeepSeek发布数学证明大模型DeepSeek-Prover-V2-671B</p><p>00:00:20 - 模型特点与适用领域</p><p>00:00:35 - 开始测试模型数学能力</p><p>00:01:08 - 第一题：青蛙爬井问题</p><p>00:01:45 - 第二题：弹珠颜色比例计算</p><p>00:02:26 - 第三题：2*3网格染色方法数量</p><p>00:03:01 - 第四题：整数乘积与差值问题</p><p>00:03:32 - 第五题：阶乘与2024的关系</p><p>00:03:59 - 第六题：巧克力工厂打包时间</p><p>00:04:44 - 第七题：画框面积比例</p><p>00:05:11 - 第八题：代币博弈问题</p><p>00:05:59 - 之后的题目：高级数论与代数题</p><p>00:09:23 - 总结：模型在15道测试题中答对12题</p><p>00:09:55 - 视频结束</p><p></p><p>#deepseek #deepseekai #deepseekv2 #ai #aigc #aimathsteacher #aicoding #llm #aiagents</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :20 - 模型特点与适用领域</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :35 - 开始测试模型数学能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :08 - 第一题：青蛙爬井问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :45 - 第二题：弹珠颜色比例计算</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :26 - 第三题：2*3网格染色方法数量</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :01 - 第四题：整数乘积与差值问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :32 - 第五题：阶乘与2024的关系</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :59 - 第六题：巧克力工厂打包时间</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :44 - 第七题：画框面积比例</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :11 - 第八题：代币博弈问题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :59 - 之后的题目：高级数论与代数题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :23 - 总结：模型在15道测试题中答对12题</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/wRYo-Ua4Zbc&t=0" target="_blank"><strong># :55 - 视频结束</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/wRYo-Ua4Zbc_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=wRYo-Ua4Zbc</p><p>🚀🚀🚀视频简介：</p><p>✅【真实客观测评】当AI遇上数学：深度解析DeepSeek-Prover-V2如何运用形式化推理解决阶乘、线性代数、积分等多领域数学难题的惊艳表现</p><p>📊 本期视频详细测评了DeepSeek最新发布的数学定理证明大模型！</p><p>🔍 通过15道不同难度和领域的数学题全面测试模型性能，涵盖代数、几何、数论、积分等领域。</p><p>👨‍🏫 从简单的青蛙爬井问题到复杂的LaTeX格式高等数学，模型仅错3题，展现出令人惊叹的推理能力和详细解题步骤！</p><p>🚀 见证AI如何解决代币博弈、巧克力工厂时间计算等复杂问题，为数学学习和研究带来革命性辅助工具。</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/introduce-DeepSeek-Prover-V2-671B</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - DeepSeek发布数学证明大模型DeepSeek-Prover-V2-671B</p><p>00:00:20 - 模型特点与适用领域</p><p>00:00:35 - 开始测试模型数学能力</p><p>00:01:08 - 第一题：青蛙爬井问题</p><p>00:01:45 - 第二题：弹珠颜色比例计算</p><p>00:02:26 - 第三题：2*3网格染色方法数量</p><p>00:03:01 - 第四题：整数乘积与差值问题</p><p>00:03:32 - 第五题：阶乘与2024的关系</p><p>00:03:59 - 第六题：巧克力工厂打包时间</p><p>00:04:44 - 第七题：画框面积比例</p><p>00:05:11 - 第八题：代币博弈问题</p><p>00:05:59 - 之后的题目：高级数论与代数题</p><p>00:09:23 - 总结：模型在15道测试题中答对12题</p><p>00:09:55 - 视频结束</p><p></p><p>#deepseek #deepseekai #deepseekv2 #ai #aigc #aimathsteacher #aicoding #llm #aiagents</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/wRYo-Ua4Zbc/hqdefault.jpg"/>
      <pubDate>2025-05-01T08:23:05.000Z</pubDate>
    </item><item>
      <title><![CDATA[🚀企业级最强开源大模型Qwen3震撼发布！本地部署+全面客观测评！Qwen3-235B-A22B+Qwen3-32B+Qwen3-14B谁是最强王者？ollama+LM Studio+vLLM本地部署]]></title>
      <link>https://www.youtube.com/watch?v=zbjwo97F4kQ</link>
      <itunes:title><![CDATA[🚀企业级最强开源大模型Qwen3震撼发布！本地部署+全面客观测评！Qwen3-235B-A22B+Qwen3-32B+Qwen3-14B谁是最强王者？ollama+LM Studio+vLLM本地部署]]></itunes:title>
      <itunes:author><![CDATA[AI超元域]]></itunes:author>
      <itunes:summary>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :05 - 使用Ollama和LM Studio部署Qwen 3模型教程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :02 - 企业项目使用vLLM在Ubuntu系统部署教程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :48 - 配置Open WebUI连接部署的Qwen 3模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :56 - 测试三款模型的知识库截止日期</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :31 - 测试模型应对幻觉问题的能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :43 - 规律识别和矩阵填空能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :17 - JSON格式化与混合格式化输出能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :37 - 代码理解与SVG流程图生成测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :21 - 测试模型的提示词遵循能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :00 - SQL能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :49 - 农夫过河问题测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :01 - 文档分析能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :41 - 算法能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :18 - Python编程能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :20 - 测试总结：14B参数模型开启思考模式效果优于32B和235B</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :44 - 视频结束，相关代码和指令获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=zbjwo97F4kQ</p><p>🚀🚀🚀视频简介：</p><p>✅【本地部署+真实测评】阿里巴巴Qwen3最强模型对决：从235B混合专家到14B本地部署，全方位能力测试从JSON格式化到Python编程，从SQL查询到矩阵运算，从Ollama到LM Studio到vLLM全平台部署教程</p><p>📢 本视频详细演示了阿里巴巴最新发布的Qwen3系列模型，包括混合专家架构模型（235B/22B和30B/3B）以及32B、14B、8B、4B、1.7B、0.6B等多种参数版本。📊</p><p>⚙️ 视频分为两大部分：首先展示了如何在不同平台部署Qwen3模型，包括Windows/macOS用户使用Ollama和LM Studio进行简易部署，以及企业用户使用vLLM在Ubuntu系统进行高性能部署的完整流程。🖥️</p><p>🔍 第二部分进行了全面的性能测试，重点对比了235B、32B和14B三个版本在知识库截止日期、幻觉问题、规律识别、JSON格式化、代码理解、SVG生成、提示词遵循、SQL能力、农夫过河问题、文档分析以及Python编程等多个维度的表现。🧠</p><p>💡 测试结果显示，开启思考模式的14B参数模型在多项测试中表现优于不开启思考模式的32B甚至235B模型，为用户选择最适合自己需求的模型版本提供了宝贵参考。✨</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/deploy-Qwen3</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - 介绍阿里Qwen 3系列模型，混合专家架构和多种参数版本</p><p>00:01:05 - 使用Ollama和LM Studio部署Qwen 3模型教程</p><p>00:02:02 - 企业项目使用vLLM在Ubuntu系统部署教程</p><p>00:02:48 - 配置Open WebUI连接部署的Qwen 3模型</p><p>00:03:56 - 测试三款模型的知识库截止日期</p><p>00:04:31 - 测试模型应对幻觉问题的能力</p><p>00:05:43 - 规律识别和矩阵填空能力测试</p><p>00:08:17 - JSON格式化与混合格式化输出能力测试</p><p>00:09:37 - 代码理解与SVG流程图生成测试</p><p>00:10:21 - 测试模型的提示词遵循能力</p><p>00:11:00 - SQL能力测试</p><p>00:11:49 - 农夫过河问题测试</p><p>00:13:01 - 文档分析能力测试</p><p>00:13:41 - 算法能力测试</p><p>00:14:18 - Python编程能力测试</p><p>00:15:20 - 测试总结：14B参数模型开启思考模式效果优于32B和235B</p><p>00:15:44 - 视频结束，相关代码和指令获取方式</p><p></p><p>#qwen #qwen3 #ollama #lmstudio #vllm #llm #llms #ai #aigc #agi #aicoding #aiprogramming</p>]]>
      </itunes:summary>
      <description>
        <![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :05 - 使用Ollama和LM Studio部署Qwen 3模型教程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :02 - 企业项目使用vLLM在Ubuntu系统部署教程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :48 - 配置Open WebUI连接部署的Qwen 3模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :56 - 测试三款模型的知识库截止日期</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :31 - 测试模型应对幻觉问题的能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :43 - 规律识别和矩阵填空能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :17 - JSON格式化与混合格式化输出能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :37 - 代码理解与SVG流程图生成测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :21 - 测试模型的提示词遵循能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :00 - SQL能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :49 - 农夫过河问题测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :01 - 文档分析能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :41 - 算法能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :18 - Python编程能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :20 - 测试总结：14B参数模型开启思考模式效果优于32B和235B</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :44 - 视频结束，相关代码和指令获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=zbjwo97F4kQ</p><p>🚀🚀🚀视频简介：</p><p>✅【本地部署+真实测评】阿里巴巴Qwen3最强模型对决：从235B混合专家到14B本地部署，全方位能力测试从JSON格式化到Python编程，从SQL查询到矩阵运算，从Ollama到LM Studio到vLLM全平台部署教程</p><p>📢 本视频详细演示了阿里巴巴最新发布的Qwen3系列模型，包括混合专家架构模型（235B/22B和30B/3B）以及32B、14B、8B、4B、1.7B、0.6B等多种参数版本。📊</p><p>⚙️ 视频分为两大部分：首先展示了如何在不同平台部署Qwen3模型，包括Windows/macOS用户使用Ollama和LM Studio进行简易部署，以及企业用户使用vLLM在Ubuntu系统进行高性能部署的完整流程。🖥️</p><p>🔍 第二部分进行了全面的性能测试，重点对比了235B、32B和14B三个版本在知识库截止日期、幻觉问题、规律识别、JSON格式化、代码理解、SVG生成、提示词遵循、SQL能力、农夫过河问题、文档分析以及Python编程等多个维度的表现。🧠</p><p>💡 测试结果显示，开启思考模式的14B参数模型在多项测试中表现优于不开启思考模式的32B甚至235B模型，为用户选择最适合自己需求的模型版本提供了宝贵参考。✨</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/deploy-Qwen3</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - 介绍阿里Qwen 3系列模型，混合专家架构和多种参数版本</p><p>00:01:05 - 使用Ollama和LM Studio部署Qwen 3模型教程</p><p>00:02:02 - 企业项目使用vLLM在Ubuntu系统部署教程</p><p>00:02:48 - 配置Open WebUI连接部署的Qwen 3模型</p><p>00:03:56 - 测试三款模型的知识库截止日期</p><p>00:04:31 - 测试模型应对幻觉问题的能力</p><p>00:05:43 - 规律识别和矩阵填空能力测试</p><p>00:08:17 - JSON格式化与混合格式化输出能力测试</p><p>00:09:37 - 代码理解与SVG流程图生成测试</p><p>00:10:21 - 测试模型的提示词遵循能力</p><p>00:11:00 - SQL能力测试</p><p>00:11:49 - 农夫过河问题测试</p><p>00:13:01 - 文档分析能力测试</p><p>00:13:41 - 算法能力测试</p><p>00:14:18 - Python编程能力测试</p><p>00:15:20 - 测试总结：14B参数模型开启思考模式效果优于32B和235B</p><p>00:15:44 - 视频结束，相关代码和指令获取方式</p><p></p><p>#qwen #qwen3 #ollama #lmstudio #vllm #llm #llms #ai #aigc #agi #aicoding #aiprogramming</p>]]>
      </description>
      <content:encoded><![CDATA[<hr style="clear:both" />

<p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :05 - 使用Ollama和LM Studio部署Qwen 3模型教程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :02 - 企业项目使用vLLM在Ubuntu系统部署教程</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :48 - 配置Open WebUI连接部署的Qwen 3模型</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :56 - 测试三款模型的知识库截止日期</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :31 - 测试模型应对幻觉问题的能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :43 - 规律识别和矩阵填空能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :17 - JSON格式化与混合格式化输出能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :37 - 代码理解与SVG流程图生成测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :21 - 测试模型的提示词遵循能力</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :00 - SQL能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :49 - 农夫过河问题测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :01 - 文档分析能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :41 - 算法能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :18 - Python编程能力测试</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :20 - 测试总结：14B参数模型开启思考模式效果优于32B和235B</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><a href="https://youtu.be/zbjwo97F4kQ&t=0" target="_blank"><strong># :44 - 视频结束，相关代码和指令获取方式</strong></a></p><p style="max-width: calc(100vw - 1rem);  word-wrap: break-word; overflow-wrap: break-word; "><p><img src="https://democwise2016.github.io/action-RSS-UT/file-cache/zbjwo97F4kQ_0.jpg" /></p></p>

<hr style="clear:both" />
====
<p>https://www.youtube.com/watch?v=zbjwo97F4kQ</p><p>🚀🚀🚀视频简介：</p><p>✅【本地部署+真实测评】阿里巴巴Qwen3最强模型对决：从235B混合专家到14B本地部署，全方位能力测试从JSON格式化到Python编程，从SQL查询到矩阵运算，从Ollama到LM Studio到vLLM全平台部署教程</p><p>📢 本视频详细演示了阿里巴巴最新发布的Qwen3系列模型，包括混合专家架构模型（235B/22B和30B/3B）以及32B、14B、8B、4B、1.7B、0.6B等多种参数版本。📊</p><p>⚙️ 视频分为两大部分：首先展示了如何在不同平台部署Qwen3模型，包括Windows/macOS用户使用Ollama和LM Studio进行简易部署，以及企业用户使用vLLM在Ubuntu系统进行高性能部署的完整流程。🖥️</p><p>🔍 第二部分进行了全面的性能测试，重点对比了235B、32B和14B三个版本在知识库截止日期、幻觉问题、规律识别、JSON格式化、代码理解、SVG生成、提示词遵循、SQL能力、农夫过河问题、文档分析以及Python编程等多个维度的表现。🧠</p><p>💡 测试结果显示，开启思考模式的14B参数模型在多项测试中表现优于不开启思考模式的32B甚至235B模型，为用户选择最适合自己需求的模型版本提供了宝贵参考。✨</p><p></p><p>👉👉👉笔记：https://www.aivi.fyi/llms/deploy-Qwen3</p><p>👉👉👉我的开源项目：https://github.com/win4r/AISuperDomain</p><p>👉👉👉请我喝咖啡：https://ko-fi.com/aila</p><p></p><p>🔥🔥🔥YouTube时间戳：</p><p>00:00:00 - 介绍阿里Qwen 3系列模型，混合专家架构和多种参数版本</p><p>00:01:05 - 使用Ollama和LM Studio部署Qwen 3模型教程</p><p>00:02:02 - 企业项目使用vLLM在Ubuntu系统部署教程</p><p>00:02:48 - 配置Open WebUI连接部署的Qwen 3模型</p><p>00:03:56 - 测试三款模型的知识库截止日期</p><p>00:04:31 - 测试模型应对幻觉问题的能力</p><p>00:05:43 - 规律识别和矩阵填空能力测试</p><p>00:08:17 - JSON格式化与混合格式化输出能力测试</p><p>00:09:37 - 代码理解与SVG流程图生成测试</p><p>00:10:21 - 测试模型的提示词遵循能力</p><p>00:11:00 - SQL能力测试</p><p>00:11:49 - 农夫过河问题测试</p><p>00:13:01 - 文档分析能力测试</p><p>00:13:41 - 算法能力测试</p><p>00:14:18 - Python编程能力测试</p><p>00:15:20 - 测试总结：14B参数模型开启思考模式效果优于32B和235B</p><p>00:15:44 - 视频结束，相关代码和指令获取方式</p><p></p><p>#qwen #qwen3 #ollama #lmstudio #vllm #llm #llms #ai #aigc #agi #aicoding #aiprogramming</p>]]></content:encoded>
      <itunes:image href="https://i.ytimg.com/vi/zbjwo97F4kQ/hqdefault.jpg"/>
      <pubDate>2025-04-29T09:38:23.000Z</pubDate>
    </item></channel>
</rss>